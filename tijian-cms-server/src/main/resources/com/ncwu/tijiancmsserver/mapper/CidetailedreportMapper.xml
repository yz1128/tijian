<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ncwu.tijiancmsserver.mapper.CidetailedreportMapper">
  <resultMap id="BaseResultMap" type="com.ncwu.tijiancmsserver.model.Cidetailedreport">
    <!--@mbg.generated-->
    <!--@Table cidetailedreport-->
    <id column="cidrId" jdbcType="INTEGER" property="cidrid" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="unit" jdbcType="VARCHAR" property="unit" />
    <result column="minrange" jdbcType="DOUBLE" property="minrange" />
    <result column="maxrange" jdbcType="DOUBLE" property="maxrange" />
    <result column="normalValue" jdbcType="VARCHAR" property="normalvalue" />
    <result column="normalValueString" jdbcType="VARCHAR" property="normalvaluestring" />
    <result column="type" jdbcType="INTEGER" property="type" />
    <result column="value" jdbcType="VARCHAR" property="value" />
    <result column="isError" jdbcType="INTEGER" property="iserror" />
    <result column="ciId" jdbcType="INTEGER" property="ciid" />
    <result column="orderId" jdbcType="INTEGER" property="orderid" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    cidrId, `name`, unit, minrange, maxrange, normalValue, normalValueString, `type`, 
    `value`, isError, ciId, orderId
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--@mbg.generated-->
    select 
    <include refid="Base_Column_List" />
    from cidetailedreport
    where cidrId = #{cidrid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--@mbg.generated-->
    delete from cidetailedreport
    where cidrId = #{cidrid,jdbcType=INTEGER}
  </delete>
  <insert id="insert" keyColumn="cidrId" keyProperty="cidrid" parameterType="com.ncwu.tijiancmsserver.model.Cidetailedreport" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into cidetailedreport (`name`, unit, minrange, 
      maxrange, normalValue, normalValueString, 
      `type`, `value`, isError, 
      ciId, orderId)
    values (#{name,jdbcType=VARCHAR}, #{unit,jdbcType=VARCHAR}, #{minrange,jdbcType=DOUBLE}, 
      #{maxrange,jdbcType=DOUBLE}, #{normalvalue,jdbcType=VARCHAR}, #{normalvaluestring,jdbcType=VARCHAR}, 
      #{type,jdbcType=INTEGER}, #{value,jdbcType=VARCHAR}, #{iserror,jdbcType=INTEGER}, 
      #{ciid,jdbcType=INTEGER}, #{orderid,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" keyColumn="cidrId" keyProperty="cidrid" parameterType="com.ncwu.tijiancmsserver.model.Cidetailedreport" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into cidetailedreport
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="name != null">
        `name`,
      </if>
      <if test="unit != null">
        unit,
      </if>
      <if test="minrange != null">
        minrange,
      </if>
      <if test="maxrange != null">
        maxrange,
      </if>
      <if test="normalvalue != null">
        normalValue,
      </if>
      <if test="normalvaluestring != null">
        normalValueString,
      </if>
      <if test="type != null">
        `type`,
      </if>
      <if test="value != null">
        `value`,
      </if>
      <if test="iserror != null">
        isError,
      </if>
      <if test="ciid != null">
        ciId,
      </if>
      <if test="orderid != null">
        orderId,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="unit != null">
        #{unit,jdbcType=VARCHAR},
      </if>
      <if test="minrange != null">
        #{minrange,jdbcType=DOUBLE},
      </if>
      <if test="maxrange != null">
        #{maxrange,jdbcType=DOUBLE},
      </if>
      <if test="normalvalue != null">
        #{normalvalue,jdbcType=VARCHAR},
      </if>
      <if test="normalvaluestring != null">
        #{normalvaluestring,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        #{type,jdbcType=INTEGER},
      </if>
      <if test="value != null">
        #{value,jdbcType=VARCHAR},
      </if>
      <if test="iserror != null">
        #{iserror,jdbcType=INTEGER},
      </if>
      <if test="ciid != null">
        #{ciid,jdbcType=INTEGER},
      </if>
      <if test="orderid != null">
        #{orderid,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.ncwu.tijiancmsserver.model.Cidetailedreport">
    <!--@mbg.generated-->
    update cidetailedreport
    <set>
      <if test="name != null">
        `name` = #{name,jdbcType=VARCHAR},
      </if>
      <if test="unit != null">
        unit = #{unit,jdbcType=VARCHAR},
      </if>
      <if test="minrange != null">
        minrange = #{minrange,jdbcType=DOUBLE},
      </if>
      <if test="maxrange != null">
        maxrange = #{maxrange,jdbcType=DOUBLE},
      </if>
      <if test="normalvalue != null">
        normalValue = #{normalvalue,jdbcType=VARCHAR},
      </if>
      <if test="normalvaluestring != null">
        normalValueString = #{normalvaluestring,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        `type` = #{type,jdbcType=INTEGER},
      </if>
      <if test="value != null">
        `value` = #{value,jdbcType=VARCHAR},
      </if>
      <if test="iserror != null">
        isError = #{iserror,jdbcType=INTEGER},
      </if>
      <if test="ciid != null">
        ciId = #{ciid,jdbcType=INTEGER},
      </if>
      <if test="orderid != null">
        orderId = #{orderid,jdbcType=INTEGER},
      </if>
    </set>
    where cidrId = #{cidrid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ncwu.tijiancmsserver.model.Cidetailedreport">
    <!--@mbg.generated-->
    update cidetailedreport
    set `name` = #{name,jdbcType=VARCHAR},
      unit = #{unit,jdbcType=VARCHAR},
      minrange = #{minrange,jdbcType=DOUBLE},
      maxrange = #{maxrange,jdbcType=DOUBLE},
      normalValue = #{normalvalue,jdbcType=VARCHAR},
      normalValueString = #{normalvaluestring,jdbcType=VARCHAR},
      `type` = #{type,jdbcType=INTEGER},
      `value` = #{value,jdbcType=VARCHAR},
      isError = #{iserror,jdbcType=INTEGER},
      ciId = #{ciid,jdbcType=INTEGER},
      orderId = #{orderid,jdbcType=INTEGER}
    where cidrId = #{cidrid,jdbcType=INTEGER}
  </update>
</mapper>