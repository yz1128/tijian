<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.neudeu.tijiancmsserver.mapper.UsersMapper">
  <resultMap id="BaseResultMap" type="com.neudeu.tijiancmsserver.model.Users">
    <!--@mbg.generated-->
    <!--@Table users-->
    <id column="userId" jdbcType="VARCHAR" property="userid" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="realName" jdbcType="VARCHAR" property="realname" />
    <result column="sex" jdbcType="INTEGER" property="sex" />
    <result column="identityCard" jdbcType="VARCHAR" property="identitycard" />
    <result column="birthday" jdbcType="DATE" property="birthday" />
    <result column="userType" jdbcType="INTEGER" property="usertype" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    userId, `password`, realName, sex, identityCard, birthday, userType
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    <!--@mbg.generated-->
    select 
    <include refid="Base_Column_List" />
    from users
    where userId = #{userid,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    <!--@mbg.generated-->
    delete from users
    where userId = #{userid,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.neudeu.tijiancmsserver.model.Users">
    <!--@mbg.generated-->
    insert into users (userId, `password`, realName, 
      sex, identityCard, birthday, 
      userType)
    values (#{userid,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, #{realname,jdbcType=VARCHAR}, 
      #{sex,jdbcType=INTEGER}, #{identitycard,jdbcType=VARCHAR}, #{birthday,jdbcType=DATE}, 
      #{usertype,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.neudeu.tijiancmsserver.model.Users">
    <!--@mbg.generated-->
    insert into users
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userid != null">
        userId,
      </if>
      <if test="password != null">
        `password`,
      </if>
      <if test="realname != null">
        realName,
      </if>
      <if test="sex != null">
        sex,
      </if>
      <if test="identitycard != null">
        identityCard,
      </if>
      <if test="birthday != null">
        birthday,
      </if>
      <if test="usertype != null">
        userType,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userid != null">
        #{userid,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="realname != null">
        #{realname,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        #{sex,jdbcType=INTEGER},
      </if>
      <if test="identitycard != null">
        #{identitycard,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null">
        #{birthday,jdbcType=DATE},
      </if>
      <if test="usertype != null">
        #{usertype,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.neudeu.tijiancmsserver.model.Users">
    <!--@mbg.generated-->
    update users
    <set>
      <if test="password != null">
        `password` = #{password,jdbcType=VARCHAR},
      </if>
      <if test="realname != null">
        realName = #{realname,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        sex = #{sex,jdbcType=INTEGER},
      </if>
      <if test="identitycard != null">
        identityCard = #{identitycard,jdbcType=VARCHAR},
      </if>
      <if test="birthday != null">
        birthday = #{birthday,jdbcType=DATE},
      </if>
      <if test="usertype != null">
        userType = #{usertype,jdbcType=INTEGER},
      </if>
    </set>
    where userId = #{userid,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.neudeu.tijiancmsserver.model.Users">
    <!--@mbg.generated-->
    update users
    set `password` = #{password,jdbcType=VARCHAR},
      realName = #{realname,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=INTEGER},
      identityCard = #{identitycard,jdbcType=VARCHAR},
      birthday = #{birthday,jdbcType=DATE},
      userType = #{usertype,jdbcType=INTEGER}
    where userId = #{userid,jdbcType=VARCHAR}
  </update>
</mapper>